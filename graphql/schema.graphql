# To really understand GraphQL, go to https://graphql.org/learn/

type Wishlist {
  id: ID
  email: String
  wishlistType: String
  products: [Products]
  isPublic: Boolean
  fieldsConfig: FieldsConfig
  createdIn: String
}

input WishlistInput {
  id: ID
  wishlistType: String
  products: [ProductsInput]
  isPublic: Boolean
  fieldsConfig: FieldsConfigInput
}

input FieldsConfigInput {
  department: String
  description: String
}

type FieldsConfig {
  department: String
  description: String
}

input ProductsInput {
  ID: Int
  Image: String
  unitValue: Float
  linkProduct: String
  nameProduct: String
  quantityProduct: Int
  skuCodeReference: String
  department: String
  bundle: Int
  notes: String
}

type Products {
  ID: Int
  Image: String
  unitValue: Float
  linkProduct: String
  nameProduct: String
  quantityProduct: Int
  skuCodeReference: String
  department: String
  bundle: Int
  notes: String
}

type DocumentCreatedResponse {
  Id: String
  Href: String
  DocumentId: String
}

type DeleteWishlistResponse {
  id: String
  success: Boolean
}

type UpdateWishlistResponse {
  id: String
  success: Boolean
}

type DateRange {
  from: String
  to: String
}

type FixedPrices {
  tradePolicyId: String
  value: Float
  listPrice: Float
  minQuantity: Int
  dateRange: DateRange
}

type ProductPrice {
  itemId: String
  listPrice: Float
  costPrice: Float
  markup: Float
  basePrice: Float
  fixedPrices: FixedPrices
}

type Query {
  """
  Return a wishlist
  """
  getWishlist(id: ID!): Wishlist

  """
  Returns a list of wishlist by email user
  """
  getWishlistsByEmail(
    page: Int,
    pageSize: Int
  ): [Wishlist]

  """
  Returns price data for given a SKU ID
  """
  getPriceBySkuId(
    skuId: Int,
    skuReference: String,
    productQuantity: Int
  ): [ProductPrice]

}

type Mutation {
  """
  Create a new wishlist
  """
  createWishlist(wishlist: WishlistInput!): DocumentCreatedResponse

  """
  Update a existing wishlist
  """
  updateWishlist(wishlist: WishlistInput): UpdateWishlistResponse

  """
  Delete a wishlist
  """
  deleteWishlist(id: ID!): DeleteWishlistResponse
}
